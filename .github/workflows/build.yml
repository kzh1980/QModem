name: Build luci-app-qmodem-mwan using coolsnowwolf/lede

on:
  # 允许你手动在 Actions 页面点击 "Run workflow" 来触发
  workflow_dispatch:

jobs:
  build:
    # 在最新的 Ubuntu 系统上运行
    runs-on: ubuntu-latest

    steps:
    # 第 1 步：安装 coolsnowwolf/lede 官方推荐的、最完整的依赖包
    - name: Install build dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libssl-dev libz-dev patch python3 python3-pip python3-setuptools subversion flex uglifyjs gcc-multilib p7zip p7zip-full texinfo libglib2.0-dev xmlto libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib gperf wget curl swig rsync

    # 第 2 步：下载 coolsnowwolf/lede 的源代码作为编译环境
    - name: Checkout coolsnowwolf/lede source
      run: |
        git clone https://github.com/coolsnowwolf/lede.git openwrt

    # 第 3 步：下载你自己的 QModem 仓库代码
    - name: Checkout QModem repository (your code)
      uses: actions/checkout@v4
      with:
        path: qmodem

    # 第 4 步：准备编译环境，将你的项目作为“自定义软件源”添加进去
    - name: Prepare build environment
      run: |
        cd openwrt
        # 将你的 QModem/luci 目录添加为名叫 qmodem 的自定义软件源
        echo 'src-link qmodem /home/runner/work/QModem/QModem/qmodem/luci' >> feeds.conf.default
        
        # 更新所有软件源（包括我们刚加的 qmodem）
        ./scripts/feeds update -a
        
        # 安装 qmodem 软件源里的所有软件包
        ./scripts/feeds install -a -p qmodem
        
        # 生成默认的编译配置文件
        make defconfig

    # 第 5 步：开始编译你的插件！
    - name: Compile the package
      run: |
        cd openwrt
        # -j1 表示单线程编译，可以避免一些潜在的错误，也让日志更清晰
        make package/luci-app-qmodem-mwan/compile V=s -j1

    # 第 6 步：上传编译好的 .ipk 文件
    - name: Upload IPK artifact
      uses: actions/upload-artifact@v4
      with:
        name: luci-app-qmodem-mwan-ipk-lede
        path: openwrt/bin/packages/x86_64/luci/luci-app-qmodem-mwan_*.ipk
